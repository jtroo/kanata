#|
This minimal config changes Caps Lock to act as Caps Lock on quick tap, but
if held, it will act as Left Ctrl. It also changes the backtick/grave key to
act as backtick/grave on quick tap, but change ijkl keys to arrow keys on hold.

This text between the two pipe+octothorpe sequences is a multi-line comment.
|#

;; Double-semicolons are single-line comments.

#|
One defcfg entry may be added, which is used for configuration key-pairs. These
configurations change kanata's behaviour at a more global level than the other
configuration entries.
|#

(defcfg
  #|
  This configuration will process all keys pressed inside of kanata, even if
  they are not mapped in defsrc. This is so that certain actions can activate
  at the right time for certain input sequences. By default, unmapped keys are
  not processed through kanata due to a Windows issue related to AltGr. If you
  use AltGr in your keyboard, you will likely want to follow the simple.kbd
  file while unmapping lctl and ralt from defsrc.
  |#
  process-unmapped-keys yes
)


#|
The defsrc entry below chooses which keys are remappable by kanata. The
deflayer entries that follow change the behaviour of the corresponding keys in
the order that they appear in defsrc. Note that any extra spaces or newlines
are ignored â€” defsrc and deflayer are treated as lists of keys/actions that are
separated by 1 or more whitespace characters.

The reason for mapping the Shift keys is so that they get processed correctly
by kanata for tap-hold keys.  However, you can add
the line below to defcfg above to tell kanata to process all keys:

  process-unmapped-keys yes
|#

(defsrc
  caps grv         i
              j    k    l
  lsft rsft
)

(deflayer default
  @cap @grv        _
              _    _    _
  _    _
)

(deflayer arrows
  _    _           up
              left down rght
  _    _
)

(defalias
  cap (tap-hold-press 200 200 caps lctl)
  grv (tap-hold-press 200 200 grv (layer-toggle arrows))
)
