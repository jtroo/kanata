//! Platform specific code for OS key code mappings.

#[cfg(target_os = "linux")]
mod linux;
#[cfg(target_os = "linux")]
pub use linux::*;

#[cfg(target_os = "windows")]
mod windows;
#[cfg(target_os = "windows")]
pub use windows::*;

/// Convert a `&str` to an `OsCode`.
///
/// kmonad's str to key mapping is found here as a reference:
/// https://github.com/kmonad/kmonad/blob/master/src/KMonad/Keyboard/Keycode.hs
///
/// Do your best to keep the str side a maximum character length of 4 so that configuration file
/// can stay clean.
pub fn str_to_oscode(s: &str) -> Option<OsCode> {
    Some(match s {
        "grv" | "`" => OsCode::KEY_GRAVE,
        "1" => OsCode::KEY_1,
        "2" => OsCode::KEY_2,
        "3" => OsCode::KEY_3,
        "4" => OsCode::KEY_4,
        "5" => OsCode::KEY_5,
        "6" => OsCode::KEY_6,
        "7" => OsCode::KEY_7,
        "8" => OsCode::KEY_8,
        "9" => OsCode::KEY_9,
        "0" => OsCode::KEY_0,
        "+" => OsCode::KEY_KPPLUS,
        "min" | "-" => OsCode::KEY_MINUS,
        "eql" | "=" => OsCode::KEY_EQUAL,
        "zzz" => OsCode::KEY_SLEEP,
        "bspc" | "bks" => OsCode::KEY_BACKSPACE,
        "tab" => OsCode::KEY_TAB,
        "q" => OsCode::KEY_Q,
        "w" => OsCode::KEY_W,
        "e" => OsCode::KEY_E,
        "r" => OsCode::KEY_R,
        "t" => OsCode::KEY_T,
        "y" => OsCode::KEY_Y,
        "u" => OsCode::KEY_U,
        "i" => OsCode::KEY_I,
        "o" => OsCode::KEY_O,
        "p" => OsCode::KEY_P,
        "{" => OsCode::KEY_LEFTBRACE,
        "}" => OsCode::KEY_RIGHTBRACE,
        "lbrc" | "[" => OsCode::KEY_LEFTBRACE,
        "rbrc" | "]" => OsCode::KEY_RIGHTBRACE,
        "\\" | "bksl" => OsCode::KEY_BACKSLASH,
        "caps" => OsCode::KEY_CAPSLOCK,
        "a" => OsCode::KEY_A,
        "s" => OsCode::KEY_S,
        "d" => OsCode::KEY_D,
        "f" => OsCode::KEY_F,
        "g" => OsCode::KEY_G,
        "h" => OsCode::KEY_H,
        "j" => OsCode::KEY_J,
        "k" => OsCode::KEY_K,
        "l" => OsCode::KEY_L,
        "scln" | ";" => OsCode::KEY_SEMICOLON,
        "'" | "apo" | "apos" => OsCode::KEY_APOSTROPHE,
        "ret" | "return" | "ent" => OsCode::KEY_ENTER,
        "lshift" | "lshft" | "lsft" | "shft" | "sft" => OsCode::KEY_LEFTSHIFT,
        "z" => OsCode::KEY_Z,
        "x" => OsCode::KEY_X,
        "c" => OsCode::KEY_C,
        "v" => OsCode::KEY_V,
        "b" => OsCode::KEY_B,
        "n" => OsCode::KEY_N,
        "m" => OsCode::KEY_M,
        "comm" | "," => OsCode::KEY_COMMA,
        "." => OsCode::KEY_DOT,
        "/" => OsCode::KEY_SLASH,
        "kp=" | "clr" => OsCode::KEY_CLEAR,
        "kprt" => OsCode::KEY_KPENTER,
        "kp/" => OsCode::KEY_KPSLASH,
        "kp+" => OsCode::KEY_KPPLUS,
        "kp*" => OsCode::KEY_KPASTERISK,
        "kp-" => OsCode::KEY_KPMINUS,
        "kp." => OsCode::KEY_KPDOT,
        "ssrq" | "sys" => OsCode::KEY_SYSRQ,
        "102d" | "lsgt" | "nubs" => OsCode::KEY_102ND,
        "scrlck" | "slck" => OsCode::KEY_SCROLLLOCK,
        "prnt" => OsCode::KEY_PRINT,
        "wkup" => OsCode::KEY_WAKEUP,
        "esc" => OsCode::KEY_ESC,
        "rshift" | "rshft" | "rsft" => OsCode::KEY_RIGHTSHIFT,
        "lctrl" | "lctl" | "ctl" => OsCode::KEY_LEFTCTRL,
        "lmeta" | "lmet" | "met" => OsCode::KEY_LEFTMETA,
        "lalt" | "alt" => OsCode::KEY_LEFTALT,
        "spc" => OsCode::KEY_SPACE,
        "ralt" => OsCode::KEY_RIGHTALT,
        "comp" | "cmps" | "cmp" => OsCode::KEY_COMPOSE,
        "rmeta" | "rmet" => OsCode::KEY_RIGHTMETA,
        "rctrl" | "rctl" => OsCode::KEY_RIGHTCTRL,
        "del" => OsCode::KEY_DELETE,
        "ins" => OsCode::KEY_INSERT,
        "bck" => OsCode::KEY_BACK,
        "fwd" => OsCode::KEY_FORWARD,
        "pgup" => OsCode::KEY_PAGEUP,
        "pgdn" => OsCode::KEY_PAGEDOWN,
        "up" => OsCode::KEY_UP,
        "down" => OsCode::KEY_DOWN,
        "lft" | "left" => OsCode::KEY_LEFT,
        "rght" => OsCode::KEY_RIGHT,
        "home" => OsCode::KEY_HOME,
        "end" => OsCode::KEY_END,
        "nlck" | "nlk" => OsCode::KEY_NUMLOCK,
        "mute" => OsCode::KEY_MUTE,
        "volu" => OsCode::KEY_VOLUMEUP,
        "voldwn" | "vold" => OsCode::KEY_VOLUMEDOWN,
        "brup" | "bru" => OsCode::KEY_BRIGHTNESSUP,
        "brdown" | "brdwn" | "brdn" => OsCode::KEY_BRIGHTNESSDOWN,
        "blup" => OsCode::KEY_KBDILLUMUP,
        "bldn" => OsCode::KEY_KBDILLUMDOWN,
        "next" => OsCode::KEY_NEXTSONG,
        "pp" => OsCode::KEY_PLAYPAUSE,
        "prev" => OsCode::KEY_PREVIOUSSONG,
        "f1" => OsCode::KEY_F1,
        "f2" => OsCode::KEY_F2,
        "f3" => OsCode::KEY_F3,
        "f4" => OsCode::KEY_F4,
        "f5" => OsCode::KEY_F5,
        "f6" => OsCode::KEY_F6,
        "f7" => OsCode::KEY_F7,
        "f8" => OsCode::KEY_F8,
        "f9" => OsCode::KEY_F9,
        "f10" => OsCode::KEY_F10,
        "f11" => OsCode::KEY_F11,
        "f12" => OsCode::KEY_F12,
        "f13" => OsCode::KEY_F13,
        "f14" => OsCode::KEY_F14,
        "f15" => OsCode::KEY_F15,
        "f16" => OsCode::KEY_F16,
        "f17" => OsCode::KEY_F17,
        "f18" => OsCode::KEY_F18,
        "f19" => OsCode::KEY_F19,
        "f20" => OsCode::KEY_F20,
        "f21" => OsCode::KEY_F21,
        "f22" => OsCode::KEY_F22,
        "f23" => OsCode::KEY_F23,
        "f24" => OsCode::KEY_F24,
        "kp0" => OsCode::KEY_KP0,
        "kp1" => OsCode::KEY_KP1,
        "kp2" => OsCode::KEY_KP2,
        "kp3" => OsCode::KEY_KP3,
        "kp4" => OsCode::KEY_KP4,
        "kp5" => OsCode::KEY_KP5,
        "kp6" => OsCode::KEY_KP6,
        "kp7" => OsCode::KEY_KP7,
        "kp8" => OsCode::KEY_KP8,
        "kp9" => OsCode::KEY_KP9,
        "hangeul" => OsCode::KEY_HANGEUL,
        "hanja" => OsCode::KEY_HANJA,
        "ro" => OsCode::KEY_RO,
        #[cfg(target_os = "linux")]
        "prtsc" => OsCode::KEY_SYSRQ,
        #[cfg(target_os = "windows")]
        "prtsc" => OsCode::KEY_PRINT,
        _ => return None,
    })
}
